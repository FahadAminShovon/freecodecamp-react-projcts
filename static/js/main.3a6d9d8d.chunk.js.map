{"version":3,"sources":["hooks/useKeyPress.js","components/Buttons.jsx","components/DrumMachine.jsx","App.js","index.js"],"names":["require","useEffect","useState","useKeyPress","targetKey","keyPressed","setKeyPressed","pressHandler","key","setTimeout","window","addEventListener","removeEventListener","AudioDiv","button","audioSrc","buttonId","power","setDescribe","volume","keyPressUpper","toUpperCase","keyPressLower","toLowerCase","blink","node","classList","toggle","id","children","play","playAudio","handleEvent","document","getElementById","blinkWithoutPower","className","onClick","src","Buttons","piano","console","log","type","type2","src2","map","item","idx","DrumMachine","describe","setPower","setVolume","setPiano","handlePianoChange","a","value","checked","onChange","prevState","step","max","min","defaultValue","e","vol","parseInt","target","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3a6d9d8d.chunk.js","sourcesContent":["const {\n\tuseEffect,\n\tuseState\n} = require(\"react\");\n\n\nfunction useKeyPress(targetKey) {\n\t// State for keeping track of whether key is pressed\n\tconst [keyPressed, setKeyPressed] = useState(false);\n\n\n\n\t// Add event listeners\n\tuseEffect(() => {\n\t\tconst pressHandler = ({\n\t\t\tkey\n\t\t}) => {\n\t\t\tif (key === targetKey) {\n\t\t\t\tsetKeyPressed(true);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetKeyPressed(false)\n\t\t\t\t}, 100)\n\t\t\t}\n\t\t};\n\t\twindow.addEventListener('keydown', pressHandler);\n\t\t// Remove event listeners on cleanup\n\t\treturn () => {\n\t\t\twindow.removeEventListener('keydown', pressHandler);\n\t\t};\n\t}, []); // Empty array ensures that effect is only run on mount and unmount\n\n\treturn keyPressed;\n}\n\nexport default useKeyPress;","import PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport useKeyPress from '../hooks/useKeyPress';\n\nfunction AudioDiv({ button, audioSrc, buttonId, power, setDescribe, volume }) {\n\tconst keyPressUpper = useKeyPress(button.toUpperCase());\n\tconst keyPressLower = useKeyPress(button.toLowerCase());\n\n\tconst playAudio = (node) => {\n\t\tsetDescribe(node.id);\n\t\tnode.children[0].volume = volume * 0.01;\n\t\tnode.children[0].play();\n\t};\n\n\tconst blink = (node) => {\n\t\tnode.classList.toggle('drum-pad-active');\n\t\t// play audio here\n\t\tplayAudio(node);\n\t\tsetTimeout(() => {\n\t\t\tnode.classList.toggle('drum-pad-active');\n\t\t}, 100);\n\t};\n\n\tconst blinkWithoutPower = (node) => {\n\t\tnode.classList.toggle('drum-pad-pressed');\n\t\t// play audio here\n\t\tsetTimeout(() => {\n\t\t\tnode.classList.toggle('drum-pad-pressed');\n\t\t}, 100);\n\t};\n\n\tconst handleEvent = () => {\n\t\tconst node = document.getElementById(buttonId);\n\t\tif (power) blink(node);\n\t\telse blinkWithoutPower(node);\n\t};\n\n\tconst handleClick = () => {\n\t\thandleEvent();\n\t};\n\n\tuseEffect(handleEvent, [keyPressUpper, keyPressLower]);\n\n\t// if( keyPressLower || keyPressUpper){\n\t// \thandleEvent()\n\t// }\n\n\treturn (\n\t\t<div className='drum-pad' id={buttonId} onClick={handleClick}>\n\t\t\t<audio className='clip' id={button} src={audioSrc}></audio>\n\t\t\t{button}\n\t\t</div>\n\t);\n}\n\nAudioDiv.propTypes = {\n\tbutton: PropTypes.string.isRequired,\n\taudioSrc: PropTypes.string.isRequired,\n\tbuttonId: PropTypes.string.isRequired,\n\tpower: PropTypes.bool.isRequired,\n\tsetDescribe: PropTypes.func.isRequired,\n\tvolume: PropTypes.number.isRequired,\n};\n\nfunction Buttons({ setDescribe, power, volume, piano }) {\n\tconsole.log('rendering')\n\tconst src = [\n\t\t{\n\t\t\tbutton: 'Q',\n\t\t\ttype: 'Heater-1',\n\t\t\ttype2: 'Chord-1',\n\t\t\tsrc: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3',\n\t\t\tsrc2: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3',\n\t\t},\n\t\t{\n\t\t\tbutton: 'W',\n\t\t\ttype: 'Heater-2',\n\t\t\ttype2: 'Chord-2',\n\t\t\tsrc: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3',\n\t\t\tsrc2: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3',\n\t\t},\n\t\t{\n\t\t\tbutton: 'E',\n\t\t\ttype: 'Heater-3',\n\t\t\ttype2: 'Chord-3',\n\t\t\tsrc: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3',\n\t\t\tsrc2: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3',\n\t\t},\n\t\t{\n\t\t\tbutton: 'A',\n\t\t\ttype: 'Heater-4',\n\t\t\ttype2: 'Shaker',\n\t\t\tsrc: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3',\n\t\t\tsrc2:\n\t\t\t\t'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3',\n\t\t},\n\t\t{\n\t\t\tbutton: 'S',\n\t\t\ttype: 'Clap',\n\t\t\ttype2: 'Open-HH',\n\t\t\tsrc: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3',\n\t\t\tsrc2: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3',\n\t\t},\n\t\t{\n\t\t\tbutton: 'D',\n\t\t\ttype: 'Open-HH',\n\t\t\ttype2: 'Closed-HH',\n\t\t\tsrc: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3',\n\t\t\tsrc2: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3',\n\t\t},\n\t\t{\n\t\t\tbutton: 'Z',\n\t\t\ttype: `Kick-n'-Hat`,\n\t\t\ttype2: 'Punchy-Kick',\n\t\t\tsrc: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3',\n\t\t\tsrc2:\n\t\t\t\t'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3',\n\t\t},\n\t\t{\n\t\t\tbutton: 'X',\n\t\t\ttype: 'Kick',\n\t\t\ttype2: 'Side-Stick',\n\t\t\tsrc: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3',\n\t\t\tsrc2:\n\t\t\t\t'src=\"https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3\"',\n\t\t},\n\t\t{\n\t\t\tbutton: 'C',\n\t\t\ttype: 'Closed-HH',\n\t\t\ttype2: 'Snare',\n\t\t\tsrc: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3',\n\t\t\tsrc2: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3',\n\t\t},\n\t];\n\n\tconsole.log(piano)\n\n\treturn (\n\t\t<div className='buttons'>\n\t\t\t{src.map((item, idx) => (\n\t\t\t\t<AudioDiv\n\t\t\t\t\tsetDescribe={setDescribe}\n\t\t\t\t\tkey={idx}\n\t\t\t\t\tbutton={item.button}\n\t\t\t\t\taudioSrc={piano ? item.src2 : item.src}\n\t\t\t\t\tbuttonId={piano ? item.type2 : item.type}\n\t\t\t\t\tpower={power}\n\t\t\t\t\tvolume={volume}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n\nButtons.propTypes = {\n\tsetDescribe: PropTypes.func.isRequired,\n\tpower: PropTypes.bool.isRequired,\n\tvolume: PropTypes.number.isRequired,\n\tpiano: PropTypes.bool.isRequired,\n};\n\nexport default Buttons;\n","import React, { useState } from 'react';\nimport Buttons from './Buttons';\n\n\nfunction DrumMachine() {\n\tconst [describe, setDescribe] = useState('');\n\tconst [power, setPower] = useState(true);\n\tconst [volume, setVolume] = useState(50);\n\tconst [piano, setPiano] = useState(false);\n\n\tconst handlePianoChange = async() => {\n\t\tif(power){\n\t\tawait setPiano(!piano);\n\t\tif(piano){\n\t\t\tsetDescribe('Heater Kit');\n\t\t}\n\t\telse {\n\t\t\tsetDescribe('SmoothPiano Kit')\n\t\t}\n\t\t}\n\n\t}\n\n\tconst handleVolumeChange = (e) => {\n\t\tconst vol = parseInt(e.target.value, 10);\n\t\tsetVolume(vol);\n\t\tsetDescribe(`Volume: ${vol}`);\n\t}\n\n\treturn (\n\t\t<div id='drum-machine'>\n\t\t\t<div id='display'>\n\t\t\t\t<Buttons\n\t\t\t\t\tclassName='buttons'\n\t\t\t\t\tsetDescribe={setDescribe}\n\t\t\t\t\tpower={power}\n\t\t\t\t\tvolume={volume}\n\t\t\t\t\tpiano={piano}\n\t\t\t\t/>\n\t\t\t\t<div className='others'>\n\t\t\t\t\t<div className='switch'>\n\t\t\t\t\t\t<label className='switch' value=\"Power\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\tchecked={power}\n\t\t\t\t\t\t\t\tonChange={() =>\n\t\t\t\t\t\t\t\t\tsetPower((prevState) => !prevState)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span className='slider'></span>\n\t\t\t\t\t\t\t<div className=\"label-text\">Power</div>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='descirbe'>{describe}</div>\n\t\t\t\t\t<div className=\"slider-range\">\n\t\t\t\t\t\t<input type=\"range\" className=\"range\" step=\"1\" max=\"100\" min=\"0\" defaultValue={volume}\n\t\t\t\t\t\tonChange={handleVolumeChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='switch'>\n\t\t\t\t\t\t<label className='switch'>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\tchecked={piano}\n\t\t\t\t\t\t\t\tonChange={handlePianoChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span className='slider'></span>\n\t\t\t\t\t\t\t<div className=\"label-text\">Bank</div>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default DrumMachine;\n","import React from 'react';\nimport './App.css';\nimport DrumMachine from './components/DrumMachine';\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <DrumMachine/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}